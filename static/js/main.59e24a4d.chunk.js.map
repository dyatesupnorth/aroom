{"version":3,"sources":["selectors/hotels.js","components/HotelListItem.js","components/HotelList.js","components/Filter.js","actions/filters.js","components/Header.js","App.js","serviceWorker.js","reducers/hotels.js","reducers/filters.js","store/configureStore.js","index.js","actions/hotels.js","logo.png"],"names":["hotels","_ref","text","starRating","facilities","filter","hotel","textMatch","name","toLowerCase","includes","starRatingMatch","facilitiesMatch","length","every","facility","HotelListItem","props","react_default","a","createElement","ListGroup_default","Item","className","noOfStars","stars","i","push","index_es","key","icon","faStar","renderStars","map","connect","state","selectHotels","filters","undefined","Card_default","variant","HotelListItem_HotelListItem","Object","assign","Filter","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onTextChange","e","setTextFilter","target","value","onStarRatingChange","setStarRatingFilter","onFacilitiesChange","setFacilitiesFilter","inherits","createClass","maxStarRating","radioButtons","type","onChange","_this2","availableFacilities","renderCheckBoxes","renderRadioButtons","Component","reduce","acc","v","indexOf","dispatch","Header","Navbar_default","bg","expand","Brand","href","src","logo","width","height","alt","App","components_Header","components_Filter","components_HotelList","Boolean","window","location","hostname","match","hotelsReducerDefaultState","reducers_hotels","action","filtersReducerDefaultState","objectSpread","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","hasRendered","store","createStore","combineReducers","hotelsReducer","filtersReducer","applyMiddleware","thunk","jsx","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.59e24a4d.chunk.js","sourcesContent":["export default (hotels, { text, starRating, facilities }) => {\n  return hotels.filter(hotel => {\n    const textMatch = hotel.name.toLowerCase().includes(text.toLowerCase());\n    const starRatingMatch = starRating ? hotel.starRating >= starRating : true;\n    const facilitiesMatch = facilities && facilities.length > 0 ? facilities.every(facility => hotel.facilities.includes(facility)) :true\n    return textMatch && starRatingMatch && facilitiesMatch;\n  });\n};\n","import React from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const renderStars = noOfStars => {\n  let stars = [];\n  for (let i = 0; i < noOfStars; i++) {\n    stars.push(<FontAwesomeIcon key={i} icon={faStar} />);\n  }\n  return stars;\n};\n\nexport const HotelListItem = props => {\n  return (\n    <ListGroup.Item className=\"list-group-item-action flex-column align-items-start\">\n      <div className=\"d-flex w-100 justify-content-between\">\n        <h5 className=\"mb-1\">{props.name}</h5>\n      </div>\n      <p className=\"mb-1\">{renderStars(props.starRating)}</p>\n      <small>\n        {!props.facilities || props.facilities.length === 0 ? (\n          ''\n        ) : (\n          <span>\n            <ul className=\"list-inline\">\n              {props.facilities.map(facility => {\n                return (\n                  <li className=\"list-inline-item\" key={facility}>\n                    {facility}\n                  </li>\n                );\n              })}\n            </ul>\n          </span>\n        )}\n      </small>\n    </ListGroup.Item>\n  );\n};\n\nexport default HotelListItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport selectHotels from \"../selectors/hotels\";\nimport { HotelListItem } from \"./HotelListItem\";\nimport Card from \"react-bootstrap/Card\";\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nexport const HotelList = props => {\n  return (\n    <Card>\n      <ListGroup variant=\"flush\">\n        {props.hotels.length === 0 ? (\n          <p>No hotels</p>\n        ) : (\n          props.hotels.map(hotel => {\n            return <HotelListItem key={hotel.name} {...hotel} />;\n          })\n        )}\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    hotels: selectHotels(state.hotels, state.filters)\n  };\n};\nexport default connect(\n  mapStateToProps,\n  undefined\n)(HotelList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setTextFilter,\n  setStarRatingFilter,\n  setFacilitiesFilter\n} from \"../actions/filters\";\n\nexport class Filter extends Component {\n  onTextChange = e => {\n    this.props.setTextFilter(e.target.value);\n  };\n\n  onStarRatingChange = e => {\n    this.props.setStarRatingFilter(e.target.value);\n  };\n\n  onFacilitiesChange = (e, i) => {\n    this.props.setFacilitiesFilter(e.target.value);\n  };\n\n  renderRadioButtons(maxStarRating) {\n    // TODO: Pull max star rating dervied from max of all hotels\n    // TODO: Convert to checkboxes, we want to be able to filter based on multiple selections\n    let radioButtons = [];\n    for (let i = 0; i < maxStarRating; i++) {\n      radioButtons.push(\n        <label key={i} className=\"form-check\">\n          <input\n            type=\"radio\"\n            value={i + 1}\n            name=\"starRating\"\n            className=\"form-check-input\"\n            onChange={this.onStarRatingChange}\n          />\n          <span className=\"form-check-label\">{i + 1}</span>\n        </label>\n      );\n    }\n    return radioButtons;\n  }\n\n  renderCheckBoxes() {\n    // TODO: Pull all available facilities directly from available hotels.\n    return this.props.availableFacilities.map((facility, i) => (\n      <label key={i} className=\"form-check\">\n        <input\n          name={facility}\n          value={facility}\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          onChange={this.onFacilitiesChange}\n        />\n        <span className=\"form-check-label\">{facility}</span>\n      </label>\n    ));\n  }\n\n  render() {\n    return (\n      this.props.filters && (\n        <div className=\"card\">\n          <article className=\"card-group-item\">\n            <header className=\"card-header\">\n              <h6 className=\"title\">Search by name</h6>\n            </header>\n            <div className=\"filter-content\">\n              <div className=\"card-body\">\n                <div className=\"form-group \">\n                  <label>Name</label>\n                  <input\n                    className=\"form-control\"\n                    name=\"text\"\n                    type=\"text\"\n                    value={this.props.filters.text}\n                    onChange={this.onTextChange}\n                  />{\" \"}\n                </div>\n              </div>\n            </div>\n          </article>\n          <article className=\"card-group-item\">\n            <header className=\"card-header\">\n              <h6 className=\"title\">Facilities </h6>\n            </header>\n            <div className=\"filter-content\">\n              <div className=\"card-body\">\n                <form>{this.renderCheckBoxes()}</form>\n              </div>\n            </div>\n          </article>\n\n          <article className=\"card-group-item\">\n            <header className=\"card-header\">\n              <h6 className=\"title\">Minimum star Rating </h6>\n            </header>\n            <div className=\"filter-content\">\n              <div className=\"card-body\">{this.renderRadioButtons(5)}</div>\n            </div>\n          </article>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    filters: state.filters,\n    // Trying to get too fancy!\n    availableFacilities: state.hotels.reduce(\n      (acc, hotel) => (\n        [].push.apply(acc, hotel.facilities.filter(v => acc.indexOf(v) === -1)),\n        acc\n      ),\n      []\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTextFilter: text => dispatch(setTextFilter(text)),\n    setStarRatingFilter: starRating =>\n      dispatch(setStarRatingFilter(starRating)),\n    setFacilitiesFilter: facility => dispatch(setFacilitiesFilter(facility))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filter);\n","export const setTextFilter = (text = \"\") => ({\n  type: \"SET_TEXT_FILTER\",\n  text\n});\n\nexport const setStarRatingFilter = (starRating = \"\") => ({\n  type: \"SET_STAR_RATING_FILTER\",\n  starRating\n});\n\n\nexport const setFacilitiesFilter = (facility = \"\") => ({\n    type: \"SET_FACILITIES_FILTER\",\n    facility\n  });","import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport logo from \"../logo.png\";\n\nexport class Header extends Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">\n          <img\n            src={logo}\n            width=\"100\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"React Bootstrap logo\"\n          />{\" \"}\n        </Navbar.Brand>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport HotelList from \"./components/HotelList\";\nimport Filter from \"./components/Filter\";\nimport Header from \"./components/Header\";\n// import HomePageBanner from \"./components/HomePageBanner\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      {/* <HomePageBanner /> */}\n      <div className=\"container pt-3\">\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-12\">\n            <Filter />\n          </div>\n          <div className=\"col-md-8 col-sm-12\">\n            <HotelList />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const hotelsReducerDefaultState = [];\n\nexport default (state = hotelsReducerDefaultState, action) => {\n  switch (action.type) {\n    case \"SET_HOTELS\":\n      return action.hotels;\n    default:\n      return state;\n  }\n};\n","const filtersReducerDefaultState = {\n  text: \"\",\n  starRating: \"\",\n  facilities: []\n};\nexport default (state = filtersReducerDefaultState, action) => {\n  switch (action.type) {\n    case \"SET_TEXT_FILTER\":\n      return {\n        ...state,\n        text: action.text\n      };\n    case \"SET_STAR_RATING_FILTER\":\n      return {\n        ...state,\n        starRating: action.starRating\n      };\n    case \"SET_FACILITIES_FILTER\":\n      return state.facilities.indexOf(action.facility) !== -1\n        ? // Facility exists, remove it\n          {\n            ...state,\n            facilities: state.facilities.filter(facility => {\n              return facility !== action.facility;\n            })\n          }\n        : // Facility does not exist, add it\n          {\n            ...state,\n            facilities: [...state.facilities, action.facility]\n          };\n    default:\n      return state;\n  }\n};\n","import {\n    createStore,\n    combineReducers,\n    applyMiddleware,\n    compose\n} from 'redux'; \nimport thunk from 'redux-thunk';\n\nimport hotelsReducer from '../reducers/hotels';\nimport filtersReducer from '../reducers/filters';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default () => {\n    const store = createStore(combineReducers({\n        hotels: hotelsReducer,\n        filters: filtersReducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n    );\n    return store;    \n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// Redux bits..\nimport configureStore from \"./store/configureStore\";\nimport { startSetHotels } from \"./actions/hotels\";\nimport { Provider } from \"react-redux\";\n\nlet hasRendered = false;\nconst store = configureStore();\n\nconst renderApp = () => {\n  if (!hasRendered) {\n    ReactDOM.render(jsx, document.getElementById(\"root\"));\n    hasRendered = true;\n  }\n};\n\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n// TODO... a better loading screen\nReactDOM.render(<h1>Loading..</h1>, document.getElementById(\"root\"));\n\nstore.dispatch(startSetHotels());\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from \"axios\";\n\nexport const hotels = () => [\n  {\n    name: \"hotelone\",\n    starRating: 5,\n    facilities: [\"car park\", \"pool\"]\n  },\n  {\n    name: \"hoteltwo\",\n    starRating: 3,\n    facilities: [\"car park\", \"gym\"]\n  },\n  {\n    name: \"hotelthree\",\n    starRating: 3,\n    facilities: []\n  }\n];\n\nexport const setHotels = hotels => ({\n  type: \"SET_HOTELS\",\n  hotels\n});\n\nexport const startSetHotels = () => {\n  return dispatch => {\n    return dispatch(setHotels(hotels()));\n  };\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo.090b2dc9.png\";"],"sourceRoot":""}